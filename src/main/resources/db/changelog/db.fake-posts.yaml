databaseChangeLog:
  - changeSet:
      id: 1.0/8
      author: bdrem (generated)
      comment: "Add some data to posts"
      changes:
        - insert:
            tableName: posts
            columns:
              - column:
                  name: id
                  value: "1"
              - column:
                  name: is_active
                  value: "1"
              - column:
                  name: moderation_status
                  value: "ACCEPTED"
              - column:
                  name: text
                  value: "A Java Developer is responsible for the design, development, and management of Java-based applications. Because Java is used so widely, particularly by large organizations, the daily roles vary widely, but can include owning a particular application or working on several at one time."
              - column:
                  name: time
                  value: "2020-12-11 18:03:11"
              - column:
                  name: title
                  value: "About java developers"
              - column:
                  name: view_count
                  value: "21"
              - column:
                  name: moderator_id
                  value: "1"
              - column:
                  name: user_id
                  value: "1"
        - insert:
            tableName: posts
            columns:
              - column:
                  name: id
                  value: "2"
              - column:
                  name: is_active
                  value: "1"
              - column:
                  name: moderation_status
                  value: "ACCEPTED"
              - column:
                  name: text
                  value: "A PHP developer is responsible for writing server-side web application logic. PHP developers usually develop back-end components, connect the application with the other (often third-party) web services, and support the front-end developers by integrating their work with the application."
              - column:
                  name: time
                  value: "2020-12-11 22:12:26"
              - column:
                  name: title
                  value: "PHP developers"
              - column:
                  name: view_count
                  value: "14"
              - column:
                  name: moderator_id
                  value: "1"
              - column:
                  name: user_id
                  value: "2"
        - insert:
            tableName: posts
            columns:
              - column:
                  name: id
                  value: "3"
              - column:
                  name: is_active
                  value: "1"
              - column:
                  name: moderation_status
                  value: "ACCEPTED"
              - column:
                  name: text
                  value: "Сейчас C++ широко используется для разработки программного обеспечения, являясь одним из самых популярных языков программирования.  "
              - column:
                  name: time
                  value: "2020-12-11 23:13:36"
              - column:
                  name: title
                  value: "C++ some text"
              - column:
                  name: view_count
                  value: "11"
              - column:
                  name: moderator_id
                  value: "1"
              - column:
                  name: user_id
                  value: "3"
        - insert:
            tableName: posts
            columns:
              - column:
                  name: id
                  value: "4"
              - column:
                  name: is_active
                  value: "1"
              - column:
                  name: moderation_status
                  value: "ACCEPTED"
              - column:
                  name: text
                  value: "JavaScript — мультипарадигменный язык программирования. Поддерживает объектно-ориентированный, императивный и функциональный стили. "
              - column:
                  name: time
                  value: "2019-06-04 14:14:46"
              - column:
                  name: title
                  value: "about JavaScript"
              - column:
                  name: view_count
                  value: "44"
              - column:
                  name: moderator_id
                  value: "1"
              - column:
                  name: user_id
                  value: "4"
        - insert:
            tableName: posts
            columns:
              - column:
                  name: id
                  value: "5"
              - column:
                  name: is_active
                  value: "1"
              - column:
                  name: moderation_status
                  value: "ACCEPTED"
              - column:
                  name: text
                  value: "When I start my Spring Boot application, the changeset is executed, but the rows are not inserted.

                          In DATABASECHANGELOG table I find a raw saying that the migration was executed, but the description is Empty, as to signify that liquibase could not see any changes in the migration.
                           How do I fix my yaml in order to be able to insert those two rows?"
              - column:
                  name: time
                  value: "2015-03-05 15:12:56"
              - column:
                  name: title
                  value: "Insert rows using liquibase in yaml format"
              - column:
                  name: view_count
                  value: "4"
              - column:
                  name: moderator_id
                  value: "1"
              - column:
                  name: user_id
                  value: "5"
        - insert:
            tableName: posts
            columns:
              - column:
                  name: id
                  value: "6"
              - column:
                  name: is_active
                  value: "1"
              - column:
                  name: moderation_status
                  value: "ACCEPTED"
              - column:
                  name: text
                  value: "Benefit from a consistent, unified experience across your entire SQL portfolio and a full range of deployment options from edge to cloud. The Azure SQL family of SQL cloud databases provides flexible options for app migration, modernization and development.​ "
              - column:
                  name: time
                  value: "2021-02-06 16:16:26"
              - column:
                  name: title
                  value: "Try SQL Server on-premises or in the cloud"
              - column:
                  name: view_count
                  value: "36"
              - column:
                  name: moderator_id
                  value: "2"
              - column:
                  name: user_id
                  value: "1"
        - insert:
            tableName: posts
            columns:
              - column:
                  name: id
                  value: "7"
              - column:
                  name: is_active
                  value: "1"
              - column:
                  name: moderation_status
                  value: "ACCEPTED"
              - column:
                  name: text
                  value: "MongoDB’s document model is simple for developers to learn and use, while still providing all the capabilities needed to meet the most complex requirements at any scale. We provide drivers for 10+ languages, and the community has built dozens more. "
              - column:
                  name: time
                  value: "2021-02-06 17:27:57"
              - column:
                  name: title
                  value: "What Is MongoDB?"
              - column:
                  name: view_count
                  value: "77"
              - column:
                  name: moderator_id
                  value: "2"
              - column:
                  name: user_id
                  value: "2"
        - insert:
            tableName: posts
            columns:
              - column:
                  name: id
                  value: "8"
              - column:
                  name: is_active
                  value: "1"
              - column:
                  name: moderation_status
                  value: "ACCEPTED"
              - column:
                  name: text
                  value: "Starting in version 3.0, MongoDB provides an API to plug in the storage engine of your choice. A storage engine, from the MongoDB context, is the component of the database that’s responsible for managing how the data is stored, both in-memory and on-disk. MongoDB supports an in-memory storage engine, however, it’s currently limited to the Enterprise edition of the product. In 2016, Percona released an open source in-memory engine for the MongoDB Community Edition called the Percona Memory Engine for MongoDB. Like MonogDB’s in-memory engine, it’s also a variation of the WiredTiger storage engine, but with no persistence to disk.

                          With an in-memory MongoDB storage engine in place, we have a level playing field between Redis and MongoDB. So, why do we need to compare the two? Let’s look at the advantages of each of them as a caching solution.

                          Let’s look at Redis first. "
              - column:
                  name: time
                  value: "2021-01-18 08:18:38"
              - column:
                  name: title
                  value: "Redis vs. MongoDB: Comparing In-Memory Databases with Percona Memory Engine  "
              - column:
                  name: view_count
                  value: "38"
              - column:
                  name: moderator_id
                  value: "5"
              - column:
                  name: user_id
                  value: "2"
        - insert:
            tableName: posts
            columns:
              - column:
                  name: id
                  value: "9"
              - column:
                  name: is_active
                  value: "1"
              - column:
                  name: moderation_status
                  value: "NEW"
              - column:
                  name: text
                  value: "Persistence, in computer science, is a noun describing data that outlives the process that created it. Java persistence could be defined as storing anything to any level of persistence using the Java programming language, but obviously this would be too broad a definition to cover in a single book. That is why this book is more focused on storing Java objects to relational databases. In particular using the Java Persistence API (JPA).

                          There are many ways to make data persist in Java, including (to name a few): JDBC, serialization, file IO, JCA, object databases, and XML databases. However, the majority of data is persisted in databases, specifically relational databases. Most things that you do on a computer or web site that involve storing data, involve accessing a relational database. Relational databases are the standard mode of persistent storage for most industries, from banking to manufacturing.

                          There are many things that can be stored in databases with Java. Java data includes strings, numbers, date and byte arrays, images, XML, and Java objects. Many Java applications use Java objects to model their application data. Because Java is an Object Oriented language, storing Java objects is a natural and common approach to persisting data from Java.

                          There are many ways to access a relational database from Java, JPA is just the latest of many different specifications, but it seems to be the direction that most programmers are heading. "
              - column:
                  name: time
                  value: "2020-07-29 19:19:59"
              - column:
                  name: title
                  value: "Java Persistence/What is Java persistence? "
              - column:
                  name: view_count
                  value: "9"
              - column:
                  name: moderator_id
                  value: "2"
              - column:
                  name: user_id
                  value: "5"
        - insert:
            tableName: posts
            columns:
              - column:
                  name: id
                  value: "10"
              - column:
                  name: is_active
                  value: "1"
              - column:
                  name: moderation_status
                  value: "ACCEPTED"
              - column:
                  name: text
                  value: "Spring is, by far, the most popular framework for application development in the Java ecosystem. By a wide margin. The reason is actually quite simple - it does a lot of things right, and it's getting better and better with each release.

                          There aren't a lot of technologies with the kind of wide reach, stability and maturity of Spring, that still move fast and innovate. That's a really tough balance to hit, and Spring has been hitting it for over a decade.

                          Today, Spring, along with Boot, is a polished, modern and highly expressive framework, easily passing the Twitter test. That's where you can actually fit useful functionality into a single tweet :)

                          So, the popularity of the Spring ecosystem is well deserved. If you're working in Java, you're very likely doing work with Spring. "
              - column:
                  name: time
                  value: "2020-07-29 11:10:10"
              - column:
                  name: title
                  value: "Spring Boot Tutorial – Bootstrap "
              - column:
                  name: view_count
                  value: "10"
              - column:
                  name: moderator_id
                  value: "5"
              - column:
                  name: user_id
                  value: "4"
        - insert:
            tableName: posts
            columns:
              - column:
                  name: id
                  value: "11"
              - column:
                  name: is_active
                  value: "1"
              - column:
                  name: moderation_status
                  value: "ACCEPTED"
              - column:
                  name: text
                  value: "Ключевой единицей в ООП является “объект”, а ключевой единицей в АОП – “аспект”. В качестве примера “аспекта” можно привести безопасность, кэширование, логирование и т.д. Внедрений зависимостей (DI) позволяет нам отделять объекты приложения друг от друга. АОП, в свою очередь, позволяет нам отделять сквозные проблемы (cross-cuttings) от объектов, к которым они относятся.

                          Модуль AOP в Spring обеспечивает нас такими сущностями, как “перехватчики” (interceptors) для перехвата приложения в определённые моменты. Например, когда выполняется определённый метод, мы можем добавить какую-то функциональность (к примеру, сделать запись в лог-файл приложения) как до, так и после выполнения метода. "
              - column:
                  name: time
                  value: "2020-05-11 12:11:11"
              - column:
                  name: title
                  value: "АОП в Spring Framework "
              - column:
                  name: view_count
                  value: "51"
              - column:
                  name: moderator_id
                  value: "5"
              - column:
                  name: user_id
                  value: "3"
        - insert:
            tableName: posts
            columns:
              - column:
                  name: id
                  value: "12"
              - column:
                  name: is_active
                  value: "1"
              - column:
                  name: moderation_status
                  value: "ACCEPTED"
              - column:
                  name: text
                  value: "Spring Security is a powerful and highly customizable authentication and access-control framework. It is the de-facto standard for securing Spring-based applications.

                          Spring Security is a framework that focuses on providing both authentication and authorization to Java applications. Like all Spring projects, the real power of Spring Security is found in how easily it can be extended to meet custom requirements

                          Features
                          Comprehensive and extensible support for both Authentication and Authorization

                          Protection against attacks like session fixation, clickjacking, cross site request forgery, etc

                          Servlet API integration

                          Optional integration with Spring Web MVC

                          Much more… "
              - column:
                  name: time
                  value: "2020-05-11 12:12:26"
              - column:
                  name: title
                  value: "Spring Security "
              - column:
                  name: view_count
                  value: "22"
              - column:
                  name: moderator_id
                  value: "2"
              - column:
                  name: user_id
                  value: "4"
        - insert:
            tableName: posts
            columns:
              - column:
                  name: id
                  value: "13"
              - column:
                  name: is_active
                  value: "1"
              - column:
                  name: moderation_status
                  value: "NEW"
              - column:
                  name: text
                  value: "пост на модерацию 1 "
              - column:
                  name: time
                  value: "2021-02-02 12:12:26"
              - column:
                  name: title
                  value: "Java java test "
              - column:
                  name: view_count
                  value: "0"
              - column:
                  name: moderator_id
                  value: "5"
              - column:
                  name: user_id
                  value: "2"
        - insert:
            tableName: posts
            columns:
              - column:
                  name: id
                  value: "14"
              - column:
                  name: is_active
                  value: "1"
              - column:
                  name: moderation_status
                  value: "DECLINED"
              - column:
                  name: text
                  value: "пост на модерацию 2 "
              - column:
                  name: time
                  value: "2021-02-06 12:12:26"
              - column:
                  name: title
                  value: "New Java SpringCloud "
              - column:
                  name: view_count
                  value: "0"
              - column:
                  name: moderator_id
                  value: "2"
              - column:
                  name: user_id
                  value: "2"
        - insert:
            tableName: posts
            columns:
              - column:
                  name: id
                  value: "15"
              - column:
                  name: is_active
                  value: "1"
              - column:
                  name: moderation_status
                  value: "ACCEPTED"
              - column:
                  name: text
                  value: " LOGIN: user@user.com PASSWORD: useruser login: user@user.com password: useruser
                   LOGIN: user@user.com PASSWORD: useruser login: user@user.com password: useruser
                   login: user@user.com password: useruser login: user@user.com password: useruser
                   login: user@user.com password: useruser login: user@user.com password: useruser
                   login: user@user.com password: useruser login: user@user.com password: useruser
                   login: user@user.com password: useruser login: user@user.com password: useruser "
              - column:
                  name: time
                  value: "2021-02-13 04:12:26"
              - column:
                  name: title
                  value: "login: user@user.com password: useruser "
              - column:
                  name: view_count
                  value: "0"
              - column:
                  name: moderator_id
                  value: "2"
              - column:
                  name: user_id
                  value: "2"
        - insert:
            tableName: posts
            columns:
              - column:
                  name: id
                  value: "16"
              - column:
                  name: is_active
                  value: "1"
              - column:
                  name: moderation_status
                  value: "ACCEPTED"
              - column:
                  name: text
                  value: " LOGIN: moderator@moderator.com PASSWORD: moderator LOGIN: moderator@moderator.com PASSWORD: moderator
                           LOGIN: moderator@moderator.com PASSWORD: moderator LOGIN: moderator@moderator.com PASSWORD: moderator
                           LOGIN: moderator@moderator.com PASSWORD: moderator LOGIN: moderator@moderator.com PASSWORD: moderator
                           LOGIN: moderator@moderator.com PASSWORD: moderator LOGIN: moderator@moderator.com PASSWORD: moderator
                           LOGIN: moderator@moderator.com PASSWORD: moderator LOGIN: moderator@moderator.com PASSWORD: moderator
                           LOGIN: moderator@moderator.com PASSWORD: moderator LOGIN: moderator@moderator.com PASSWORD: moderator
                           LOGIN: moderator@moderator.com PASSWORD: moderator LOGIN: moderator@moderator.com PASSWORD: moderator
                           LOGIN: moderator@moderator.com PASSWORD: moderator LOGIN: moderator@moderator.com PASSWORD: moderator
                           LOGIN: moderator@moderator.com PASSWORD: moderator LOGIN: moderator@moderator.com PASSWORD: moderator
                           LOGIN: moderator@moderator.com PASSWORD: moderator LOGIN: moderator@moderator.com PASSWORD: moderator
                           LOGIN: moderator@moderator.com PASSWORD: moderator LOGIN: moderator@moderator.com PASSWORD: moderator
                           LOGIN: moderator@moderator.com PASSWORD: moderator LOGIN: moderator@moderator.com PASSWORD: moderator
                           LOGIN: moderator@moderator.com PASSWORD: moderator LOGIN: moderator@moderator.com PASSWORD: moderator
                           LOGIN: moderator@moderator.com PASSWORD: moderator LOGIN: moderator@moderator.com PASSWORD: moderator
                           LOGIN: moderator@moderator.com PASSWORD: moderator LOGIN: moderator@moderator.com PASSWORD: moderator "

              - column:
                  name: time
                  value: "2021-02-13 05:11:11"
              - column:
                  name: title
                  value: "login: moderator@moderator.com password: moderator "
              - column:
                  name: view_count
                  value: "0"
              - column:
                  name: moderator_id
                  value: "2"
              - column:
                  name: user_id
                  value: "2"